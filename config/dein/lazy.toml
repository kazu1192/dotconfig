[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'groenewege/vim-less'
on_ft = 'less'

[[plugins]]
repo = 'stephpy/vim-yaml'
on_ft = 'yaml'

[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

[[plugins]]
repo = 'wavded/vim-stylus'
on_ft = 'stylus'

[[plugins]]
repo = 'StanAngeloff/php.vim'
on_ft = 'php'

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

[[plugins]]
repo = 'yuezk/vim-js'
on_ft = 'js'

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = 'jsx'

[[plugins]]  # Asynchronous Lint Engine
repo = 'w0rp/ale'
on_ft = ['python', 'sh', 'js', 'javascript']
hook_add= '''
let g:ale_sign_error = '⨉'
let g:ale_sign_warning = '⚠'
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ OK']
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_sign_column_always = 1
let g:ale_lint_on_enter = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 0
let g:ale_keep_list_window_open = 0
let g:ale_completion_enabled = 0
" Check Python files with flake8 and pylint.
let g:ale_linters = { 'python': ['flake8', 'pylint'],
                    \ 'sh': ['shellcheck'],
                    \ 'javascript': ['jshint',],
                    \ 'html': ['jshint',],
                    \ }
                    " \ 'html': ['jshint', 'eslint'],
" Fix Python files with autopep8 and yapf.
let g:ale_fixers = { 'python': ['autopep8', 'yapf'],
                   \ }
                   " \ 'javascript': ['eslint'],
" Disable warnings about trailing whitespace for Python files.
let g:ale_warn_about_trailing_whitespace = 0
let g:ale_fix_on_save = 1
" nmap [ale] <Nop>
" map <C-q> [ale]
nmap <silent> <leader>k <Plug>(ale_previous_wrap)
nmap <silent> <leader>j <Plug>(ale_next_wrap)
'''

[[plugins]]  # Program runner
repo = 'thinca/vim-quickrun'
on_ft = ['python', 'sh']
hook_add = '''
let g:quickrun_config = {
    \ '_' : {
        \ 'runner' : 'vimproc',
        \ 'runner/vimproc/updatetime' : 40,
        \ 'outputter' : 'error',
        \ 'outputter/error/success' : 'buffer',
        \ 'outputter/error/error'   : 'quickfix',
        \ 'outputter/buffer/split' : ':botright 8sp',
    \ }
\}
let g:quickrun_no_default_key_mappings = 1
nmap <Leader>b :QuickRun <CR>
'''
